import React from 'react';

const StepsGrid: React.FC = () => {
    const steps = [
        {
            text: '01.  Set up Your Account and Get Started',
            imgSrc: "data:image/svg+xml,%3csvg%20width='38'%20height='40'%20viewBox='0%200%2038%2040'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M19.101%200.124069C17.4423%200.57222%2016.1583%202.06653%2015.9272%203.81758L15.8672%204.27199L9.98697%204.27333C3.63117%204.27476%203.49244%204.28387%202.55644%204.76044C1.84224%205.12415%201.08277%205.89927%200.72749%206.62713C0.337795%207.42567%200.238281%207.95853%200.238281%209.24669C0.238281%2010.4263%200.336105%2010.7462%200.807439%2011.1075C1.4473%2011.5979%202.29934%2011.4717%202.80002%2010.8123C3.0268%2010.5138%203.042%2010.4311%203.08407%209.26742C3.13227%207.93557%203.18723%207.77588%203.74082%207.36052C3.98227%207.1793%204.08463%207.1759%209.93823%207.15204L15.8901%207.12791V19.9997V32.8715L9.93823%2032.8474C4.08463%2032.8235%203.98227%2032.8201%203.74082%2032.6389C3.18723%2032.2236%203.13227%2032.0639%203.08407%2030.732C3.0412%2029.5467%203.03035%2029.4904%202.7833%2029.1651C2.17502%2028.364%201.09104%2028.3981%200.466122%2029.2381C0.308892%2029.4494%200.278567%2029.6409%200.253577%2030.582C0.217738%2031.9271%200.322499%2032.5445%200.727045%2033.3723C1.08277%2034.1002%201.84268%2034.8756%202.55644%2035.239C3.49244%2035.7156%203.63117%2035.7247%209.98697%2035.7261L15.8672%2035.7274L15.9251%2036.166C16.2279%2038.4592%2018.2202%2040.1676%2020.3811%2039.9869C21.3039%2039.9097%2034.1569%2036.7827%2034.7998%2036.479C35.9101%2035.9543%2036.9082%2034.6248%2037.1371%2033.3652C37.272%2032.623%2037.272%207.37643%2037.1371%206.63419C36.9122%205.39652%2035.9181%204.05877%2034.8282%203.52662C34.4957%203.36425%2032.1051%202.74756%2027.4926%201.6342C20.2407%20-0.116225%2020.0902%20-0.143302%2019.101%200.124069Z'%20fill='%234540FF'/%3e%3cpath%20opacity='0.6'%20d='M16.2%2013.6161C16.3167%2013.4538%2016.5751%2013.2474%2016.7742%2013.1576C17.2091%2012.9616%2017.4445%2012.9512%2017.8295%2013.1109C17.9891%2013.177%2020.0978%2014.5406%2022.5154%2016.141C26.584%2018.8345%2026.9237%2019.0784%2027.0794%2019.4191C27.2913%2019.8824%2027.2913%2020.1304%2027.0789%2020.5947C26.9222%2020.9372%2026.5847%2021.1791%2022.4044%2023.9441C19.4409%2025.9041%2017.7896%2026.9445%2017.58%2026.9836C17.1293%2027.0675%2016.5314%2026.8221%2016.2293%2026.4293C16.0068%2026.1401%2015.9856%2026.0415%2015.9582%2025.1732L15.9285%2024.231L14.1471%2024.2015L2.03189%2024.1718L1.47524%2023.8722C0.856926%2023.5394%200.590661%2023.2663%200.238084%2022.6027L0%2022.1548V20.0063V17.8577L0.238084%2017.4098C0.590661%2016.7462%200.856926%2016.4732%201.47524%2016.1403L2.03189%2015.8407L14.1471%2015.811L15.9285%2015.7815L15.9582%2014.8464C15.9841%2014.0268%2016.014%2013.8749%2016.2%2013.6161Z'%20fill='%23DD85FF'/%3e%3c/svg%3e",
        },
        {
            text: '02.  Upload  Data to Train Your AI Agents',
            imgSrc: 'https://www.rvin.sa/assets/process-two-k-RzpsIb.svg',
        },
        {
            text: '03.  Deploy and Interact With Your Agents',
            imgSrc: "data:image/svg+xml,%3csvg%20width='39'%20height='42'%20viewBox='0%200%2039%2042'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M3.69571%200.199382C2.3331%200.606772%201.18096%201.55706%200.581292%202.76824C-0.0373633%204.01777%200.000448618%203.11406%200.000448618%2016.636C0.000448618%2025.0933%200.0291514%2028.9627%200.0941192%2029.2812C0.462184%2031.0841%202.0331%2032.7271%203.83699%2033.1961C4.30534%2033.3178%205.58596%2033.3333%2015.1591%2033.3333C21.0958%2033.3333%2025.9532%2033.3107%2025.9532%2033.2832C25.9532%2033.2556%2025.3847%2031.3561%2024.6899%2029.0621C23.6006%2025.4655%2023.4219%2024.7935%2023.3923%2024.182C23.3677%2023.6762%2023.3985%2023.3495%2023.4995%2023.0434C23.9517%2021.6716%2025.1881%2020.7687%2026.6143%2020.7687C27.1847%2020.7687%2027.7353%2020.9191%2032.5065%2022.3789C35.4011%2023.2646%2037.8766%2024.0248%2038.0075%2024.0683L38.2456%2024.1474L38.2223%2014.1288L38.1991%204.11033L38.0034%203.52968C37.585%202.28785%2036.5454%201.09339%2035.3896%200.526679C34.24%20-0.0370001%2035.2963%20-0.00297135%2019.0817%200.00213726L4.34023%200.00672615L3.69571%200.199382ZM34.2031%202.731C34.79%203.00531%2035.182%203.37599%2035.4783%203.93716C35.706%204.36827%2035.7071%204.37927%2035.7338%206.5564L35.7607%208.74272H19.1266H2.4926V6.68005C2.4926%204.19769%202.53445%204.01231%203.2601%203.2804C4.0844%202.4489%202.54829%202.52293%2019.1213%202.51618L33.7304%202.51021L34.2031%202.731ZM6.21579%204.6263C5.87969%204.77367%205.67018%205.0827%205.61415%205.51407C5.55958%205.93402%205.84188%206.38228%206.30482%206.61086C6.58111%206.74733%206.6856%206.75806%206.95175%206.67771C7.62781%206.47363%207.9658%205.79686%207.70532%205.16876C7.46685%204.59357%206.82439%204.35961%206.21579%204.6263ZM10.1769%204.58387C9.55579%204.83705%209.32557%205.78924%209.75972%206.30911C10.2546%206.90171%2011.2179%206.80949%2011.5633%206.13654C12.0243%205.23821%2011.1031%204.20635%2010.1769%204.58387ZM13.9478%204.66457C12.8575%205.35449%2013.5644%207.00414%2014.8027%206.65961C15.2742%206.52852%2015.5549%206.13957%2015.5549%205.61772C15.5549%205.25509%2015.512%205.14296%2015.2727%204.87982C14.9108%204.48205%2014.3741%204.39485%2013.9478%204.66457Z'%20fill='%233E3DFF'/%3e%3cpath%20opacity='0.6'%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M18.7611%2022.236C18.2829%2022.5275%2018.0016%2023.0511%2018%2023.6524C17.9988%2024.1076%2022.9363%2040.568%2023.2691%2041.2181C23.5544%2041.7755%2024.1126%2042.0482%2024.8561%2041.993C25.9852%2041.9095%2026.0893%2041.731%2027.5901%2037.3017C28.5934%2034.3413%2028.9571%2033.412%2029.2055%2033.174C29.4384%2032.9508%2030.5634%2032.5175%2033.3242%2031.5878C37.7286%2030.1047%2037.9083%2029.9995%2037.993%2028.855C38.048%2028.1121%2037.7762%2027.5545%2037.2182%2027.2662C36.8782%2027.0905%2034.7961%2026.4464%2023.0806%2022.8923C21.4618%2022.4013%2019.9147%2021.9998%2019.6424%2022C19.3644%2022.0002%2018.9779%2022.1036%2018.7611%2022.236Z'%20fill='%23DD85FF'/%3e%3c/svg%3e",
        },
    ];

    return (
        <div className="grid grid-cols-1 md:grid-cols-3 lg:gap-x-[137px] gap-x-[25px] lg:gap-y-0 gap-y-4">
            {steps.map((step, index) => (
                <div key={index} className="flex flex-col gap-y-3">
                    <div className="relative w-[132px] h-[132px] rounded-full flex items-center justify-center bg-[#111122] mx-auto p-[2px]">
                        <div
                            className="absolute h-full w-full rounded-full"
                            style={{
                                background: 'linear-gradient(rgb(105, 84, 158), rgb(8, 9, 17))',
                            }}
                        />
                        <div className="relative w-full h-full bg-[#141414] rounded-full flex items-center justify-center">
                            <img src={step.imgSrc} alt="process" />
                        </div>
                    </div>
                    <p className="text-[20px] rtl:text-[22px] text-white font-normal leading-[34px] text-center">
                        {step.text}
                    </p>
                </div>
            ))}
        </div>
    );
};

export default StepsGrid;
